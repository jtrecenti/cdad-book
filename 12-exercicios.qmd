---
title: Exercícios
format: live-html
---

## Exemplo de exercício

Faça a soma dar 5.

```{pyodide}
#| setup: true
#| exercise: ex_1
# aqui, podemos criar uma variável que será usada nos exercícios
x = 1 + 1
```

```{pyodide}
#| exercise: ex_1
x + ______
```

::: { .hint exercise="ex_1"}
::: { .callout-note collapse="false"}
## Hint 1

Queremos somar o valor 3!
:::
:::

::: { .hint exercise="ex_1"}
::: { .callout-note collapse="false"}
## Hint 2

Lembre-se, o valor é 3.

:::
:::

::: { .solution exercise="ex_1" }
::: { .callout-tip collapse="false"}
## Solução:

Coloque o valor 3!

```python
x + 3
```

:::
:::

```{pyodide}
#| exercise: ex_1
#| check: true
feedback = None
if (result == 5):
  feedback = { "correct": True, "message": "Parabéns!" }
else:
  feedback = { "correct": False, "message": "Que pena, tente novamente." }
feedback
```

## Exercício 2

Fazer um filtro na base das câmaras para selecionar apenas as câmaras ordinárias.

Leitura dos dados:

```{python}
import pandas as pd
camaras = pd.read_csv('https://raw.githubusercontent.com/jtrecenti/camaras-test/refs/heads/main/camaras.csv')

camaras.value_counts('camara').reset_index()
```

```{pyodide}
#| setup: true
#| exercise: ex_2

import pandas as pd
camaras = pd.read_csv('https://raw.githubusercontent.com/jtrecenti/camaras-test/refs/heads/main/camaras.csv')
```

```{pyodide}
#| exercise: ex_2
camaras[camaras['camara'].str.contains('________')]
```


```{pyodide}
#| exercise: ex_2
#| check: true

n = camaras[camaras['camara'].str.contains('Direito Criminal')].shape[0]
feedback = None
if (result.shape[0] == n):
  feedback = { "correct": True, "message": "Parabéns!" }
else:
  feedback = { "correct": False, "message": "Que pena, tente novamente." }
feedback
```

## Exercício 3

## Exercício 3 — Filtragem e estatísticas por ano
**Enunciado.** Usando o dataset `camaras` (carregado no `setup`), crie um DataFrame contendo apenas as votações dos anos **2020** e **2021**. Em seguida:
1. Calcule o total de `votos_sim` por `ano`.
2. Mostre o top-3 partidos com maior soma de `votos_sim` no período (2020–2021).

```{python}
#| label: ex_3_solution
#| eval: true
#| echo: false

# filtrar por anos
df_20_21 = camaras[camaras["ano"].isin([2020, 2021])]

# total de votos_sim por ano
total_por_ano = df_20_21.groupby("ano", as_index=False)["votos_sim"].sum().sort_values("ano")
total_por_ano
```

```{python}
#| label: ex_3_top_partidos
#| eval: true
#| echo: false

# top-3 partidos por votos_sim (no período)
top_partidos = df_20_21.groupby("partido", as_index=False)["votos_sim"].sum().sort_values("votos_sim", ascending=False).head(3)
top_partidos
```


## Exercício 4

## Exercício 5
